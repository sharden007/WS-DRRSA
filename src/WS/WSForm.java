/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WS;

import java.awt.Color;
import java.io.IOException;
import java.io.PrintStream;
import java.net.URI;
import java.net.URISyntaxException;
import java.io.OutputStream;
import java.util.Date;



/**
 *
 * @author shawn.harden
 */
public class WSForm extends javax.swing.JFrame {
private PrintStream standardOut;
           
    /**
     * Creates new form DVLForm
     */
    public WSForm() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ModeGroup = new javax.swing.ButtonGroup();
        jMaintDialog = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jJpesPanel = new javax.swing.JPanel();
        jModeLable = new javax.swing.JLabel();
        jInitialButton = new javax.swing.JRadioButton();
        jMaintenanceButton = new javax.swing.JRadioButton();
        jRefScrollPane = new javax.swing.JScrollPane();
        RefList = new javax.swing.JList<>();
        jReferenceLabel = new javax.swing.JLabel();
        jClearSelectb = new javax.swing.JButton();
        jStartb = new javax.swing.JButton();
        jExitButton = new javax.swing.JButton();
        jPic = new javax.swing.JLabel();
        jStatusLabel = new javax.swing.JLabel();
        jSelectLog = new javax.swing.JButton();
        jClearStatusButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jRxsPanel = new javax.swing.JPanel();
        jGfmdiPanel = new javax.swing.JPanel();
        jDmdcPanel = new javax.swing.JPanel();

        javax.swing.GroupLayout jMaintDialogLayout = new javax.swing.GroupLayout(jMaintDialog.getContentPane());
        jMaintDialog.getContentPane().setLayout(jMaintDialogLayout);
        jMaintDialogLayout.setHorizontalGroup(
            jMaintDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jMaintDialogLayout.setVerticalGroup(
            jMaintDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DRRS-A Web Services");

        jModeLable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jModeLable.setText("Mode:");

        ModeGroup.add(jInitialButton);
        jInitialButton.setText("Intial/Baseline");
        jInitialButton.setToolTipText("This selection retrieves all the reference data items.");
        jInitialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jInitialButtonActionPerformed(evt);
            }
        });

        ModeGroup.add(jMaintenanceButton);
        jMaintenanceButton.setText("Maintenance");
        jMaintenanceButton.setToolTipText("This selection retrieves only the selected data items.");
        jMaintenanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMaintenanceButtonActionPerformed(evt);
            }
        });

        RefList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "CargoExtent", "CargoType", "Cin", "Component", "CountryCode", "FmToCinLink", "FmToPinLink", "Geolocation", "Means", "Mod", "ModeSource", "PidComposite", "Pid", "Pin", "SeriesPermission", "Service", "Source", "Split", "StopType", "TuchaCargo3", "TuchaCargo4", "Tucha", "Tudet", "ULNTucha", "UnitLevel", "UnitTypeRecord" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        RefList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefListMouseClicked(evt);
            }
        });
        jRefScrollPane.setViewportView(RefList);

        jReferenceLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jReferenceLabel.setText("Reference Data:");

        jClearSelectb.setText("Clear Selection");
        jClearSelectb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearSelectbActionPerformed(evt);
            }
        });

        jStartb.setText("Start");
        jStartb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStartbActionPerformed(evt);
            }
        });

        jExitButton.setText("Close");

        jPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WS/SEC2.png"))); // NOI18N
        jPic.setText("jLabel1");

        jStatusLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jStatusLabel.setText("Status: ");

        jSelectLog.setText("Select Log File");

        jClearStatusButton.setText("Clear Status Window");
        jClearStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearStatusButtonActionPerformed(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        javax.swing.GroupLayout jJpesPanelLayout = new javax.swing.GroupLayout(jJpesPanel);
        jJpesPanel.setLayout(jJpesPanelLayout);
        jJpesPanelLayout.setHorizontalGroup(
            jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jJpesPanelLayout.createSequentialGroup()
                .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jJpesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jJpesPanelLayout.createSequentialGroup()
                                .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jJpesPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jInitialButton)
                                        .addGap(33, 33, 33)
                                        .addComponent(jMaintenanceButton))
                                    .addComponent(jModeLable)
                                    .addComponent(jReferenceLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPic, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jJpesPanelLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jSelectLog)
                                .addGap(150, 150, 150)
                                .addComponent(jClearStatusButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jExitButton))
                            .addGroup(jJpesPanelLayout.createSequentialGroup()
                                .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jJpesPanelLayout.createSequentialGroup()
                                        .addComponent(jClearSelectb)
                                        .addGap(30, 30, 30)
                                        .addComponent(jStartb))
                                    .addComponent(jRefScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jJpesPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jJpesPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jStatusLabel))
                        .addGap(0, 145, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jJpesPanelLayout.setVerticalGroup(
            jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jJpesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jJpesPanelLayout.createSequentialGroup()
                        .addComponent(jModeLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jInitialButton)
                            .addComponent(jMaintenanceButton))
                        .addGap(31, 31, 31)
                        .addComponent(jReferenceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRefScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jClearSelectb)
                            .addComponent(jStartb))
                        .addGap(41, 41, 41)
                        .addComponent(jStatusLabel))
                    .addComponent(jPic))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jJpesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jExitButton)
                    .addComponent(jSelectLog)
                    .addComponent(jClearStatusButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("JPES", jJpesPanel);

        javax.swing.GroupLayout jRxsPanelLayout = new javax.swing.GroupLayout(jRxsPanel);
        jRxsPanel.setLayout(jRxsPanelLayout);
        jRxsPanelLayout.setHorizontalGroup(
            jRxsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 791, Short.MAX_VALUE)
        );
        jRxsPanelLayout.setVerticalGroup(
            jRxsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("RXS 2.0", jRxsPanel);

        javax.swing.GroupLayout jGfmdiPanelLayout = new javax.swing.GroupLayout(jGfmdiPanel);
        jGfmdiPanel.setLayout(jGfmdiPanelLayout);
        jGfmdiPanelLayout.setHorizontalGroup(
            jGfmdiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 791, Short.MAX_VALUE)
        );
        jGfmdiPanelLayout.setVerticalGroup(
            jGfmdiPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("GFM-DI", jGfmdiPanel);

        javax.swing.GroupLayout jDmdcPanelLayout = new javax.swing.GroupLayout(jDmdcPanel);
        jDmdcPanel.setLayout(jDmdcPanelLayout);
        jDmdcPanelLayout.setHorizontalGroup(
            jDmdcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 791, Short.MAX_VALUE)
        );
        jDmdcPanelLayout.setVerticalGroup(
            jDmdcPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("DMDC", jDmdcPanel);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jInitialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jInitialButtonActionPerformed
        RefList.setEnabled(false);
        //RefList.setBackground(Color.WHITE);
        
        int start = 0;
        int end = RefList.getModel().getSize() - 1;
         if (end >= 0) {
           RefList.setSelectionInterval(start, end);
    }//GEN-LAST:event_jInitialButtonActionPerformed
    }
    private void jMaintenanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMaintenanceButtonActionPerformed
        RefList.setEnabled(true);
        //RefList.setBackground(Color.GREEN);
        jMaintDialog.setVisible(true);
        jMaintDialog.setTitle("Maintenance Mode Selected...");
    }//GEN-LAST:event_jMaintenanceButtonActionPerformed

    private void jClearSelectbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearSelectbActionPerformed
      RefList.clearSelection();
      
       //jMaintenanceButton.setSelected(false); not working???
      //jInitialButton.setSelected(false); not working???
       
    }//GEN-LAST:event_jClearSelectbActionPerformed

    private void jStartbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStartbActionPerformed
        RefList.setEnabled(false); 
        printLog();
        try {
           URI uri = new URI ("http://www.cnn.com");
            java.awt.Desktop.getDesktop().browse(uri);   
        }
        catch (IOException e) {
            jTextArea.setForeground(Color.red);
        }
        catch (URISyntaxException e){
        }
        
         jTextArea.setText("\nRequest for reference data sent...\n");
    }//GEN-LAST:event_jStartbActionPerformed

    private void RefListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefListMouseClicked
        jMaintenanceButton.setSelected(true);
        RefList.setBackground(Color.GREEN);
    }//GEN-LAST:event_RefListMouseClicked

    private void jClearStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearStatusButtonActionPerformed
        // TODO add your handling code here:
        jTextArea.setText("");
    }//GEN-LAST:event_jClearStatusButtonActionPerformed

     private void printLog() {
         
        Thread thread = new Thread(new Runnable() {
          // private PrintStream standardOut;
    PrintStream printStream = standardOut;
    
            @Override
            public void run() {
                redirectSystemStreams();
       
            }
 //The following codes set where the text get redirected. In this case, jTextArea1    
  private void updateTextArea(final String text) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      
        public void run() {
        jTextArea.append(text);
      }
    });
  }
 
//Followings are The Methods that do the Redirect, you can simply Ignore them. 
  private void redirectSystemStreams() {
    OutputStream out = new OutputStream() {
      @Override
      public void write(int b) throws IOException {
        updateTextArea(String.valueOf((char) b));
      }
 
      @Override
      public void write(byte[] b, int off, int len) throws IOException {
        updateTextArea(new String(b, off, len));
      }
 
      @Override
      public void write(byte[] b) throws IOException {
        write(b, 0, b.length);
      }
    };
 
    System.setOut(new PrintStream(out, true));
    System.setErr(new PrintStream(out, true));      
                 
                while (true) {
                    System.out.println("Current Time is: " + (new Date()));
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }
                }
            }
       });
        thread.start();      }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WSForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WSForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WSForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WSForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WSForm().setVisible(true);
            }
        });
//        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup ModeGroup;
    private javax.swing.JList<String> RefList;
    private javax.swing.JButton jClearSelectb;
    private javax.swing.JButton jClearStatusButton;
    private javax.swing.JPanel jDmdcPanel;
    private javax.swing.JButton jExitButton;
    private javax.swing.JPanel jGfmdiPanel;
    private javax.swing.JRadioButton jInitialButton;
    private javax.swing.JPanel jJpesPanel;
    private javax.swing.JDialog jMaintDialog;
    private javax.swing.JRadioButton jMaintenanceButton;
    private javax.swing.JLabel jModeLable;
    private javax.swing.JLabel jPic;
    private javax.swing.JScrollPane jRefScrollPane;
    private javax.swing.JLabel jReferenceLabel;
    private javax.swing.JPanel jRxsPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jSelectLog;
    private javax.swing.JButton jStartb;
    private javax.swing.JLabel jStatusLabel;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
